// Copyright (c) 2018 Stephan Unverwerth
// This code is licensed under MIT license (See LICENSE for details)

module Std.IO {
    export function print(v: u8): void {}
    export function print(v: u16): void {}
    export function print(v: u32): void {}
    export function print(v: u64): void {}
    export function print(v: i8): void {}
    export function print(v: i16): void {}
    export function print(v: i32): void {}
    export function print(v: i64): void {}
    export function print(v: f32): void {}
    export function print(v: f64): void {}
    export function print(v: String): void {}
    export function print(v: bool): void {}

    export function println(v: i8): void { print(v); print("\n"); }
    export function println(v: i16): void { print(v); print("\n"); }
    export function println(v: i32): void { print(v); print("\n"); }
    export function println(v: i64): void { print(v); print("\n"); }
    export function println(v: u8): void { print(v); print("\n"); }
    export function println(v: u16): void { print(v); print("\n"); }
    export function println(v: u32): void { print(v); print("\n"); }
    export function println(v: u64): void { print(v); print("\n"); }
    export function println(v: f32): void { print(v); print("\n"); }
    export function println(v: f64): void { print(v); print("\n"); }
    export function println(v: String): void { print(v); print("\n"); }
    export function println(v: bool): void { print(v); print("\n"); }

    // File IO

    external function fopen(name: String, mode: String): u32;
    external function fclose(file: u32): i32;
    external function fwrite(buffer: Ptr, size: u32, count: u32, file: u32): u32;
    external function strlen(str: String): i32;

    export class File {
        var handle: u32;

        function init(name: String, mode: String) {
            this.handle = fopen(name, mode);
        }

        function write(str: String) {
            fwrite(str, strlen(str), 1, this.handle);
        }

        function write(n: u8) {
            fwrite(n, 1, 1, this.handle);
        }

        function write(n: u16) {
            fwrite(n, 2, 1, this.handle);
        }

        function close() {
            fclose(this.handle);
        }
    }
}